// Code generated by ent, DO NOT EDIT.

package hexinfluence

import (
	"stride-wars-app/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLTE(FieldID, id))
}

// H3Index applies equality check predicate on the "h3_index" field. It's identical to H3IndexEQ.
func H3Index(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldH3Index, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldUserID, v))
}

// Score applies equality check predicate on the "score" field. It's identical to ScoreEQ.
func Score(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldScore, v))
}

// LastUpdated applies equality check predicate on the "last_updated" field. It's identical to LastUpdatedEQ.
func LastUpdated(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldLastUpdated, v))
}

// H3IndexEQ applies the EQ predicate on the "h3_index" field.
func H3IndexEQ(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldH3Index, v))
}

// H3IndexNEQ applies the NEQ predicate on the "h3_index" field.
func H3IndexNEQ(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNEQ(FieldH3Index, v))
}

// H3IndexIn applies the In predicate on the "h3_index" field.
func H3IndexIn(vs ...string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldIn(FieldH3Index, vs...))
}

// H3IndexNotIn applies the NotIn predicate on the "h3_index" field.
func H3IndexNotIn(vs ...string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNotIn(FieldH3Index, vs...))
}

// H3IndexGT applies the GT predicate on the "h3_index" field.
func H3IndexGT(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGT(FieldH3Index, v))
}

// H3IndexGTE applies the GTE predicate on the "h3_index" field.
func H3IndexGTE(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGTE(FieldH3Index, v))
}

// H3IndexLT applies the LT predicate on the "h3_index" field.
func H3IndexLT(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLT(FieldH3Index, v))
}

// H3IndexLTE applies the LTE predicate on the "h3_index" field.
func H3IndexLTE(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLTE(FieldH3Index, v))
}

// H3IndexContains applies the Contains predicate on the "h3_index" field.
func H3IndexContains(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldContains(FieldH3Index, v))
}

// H3IndexHasPrefix applies the HasPrefix predicate on the "h3_index" field.
func H3IndexHasPrefix(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldHasPrefix(FieldH3Index, v))
}

// H3IndexHasSuffix applies the HasSuffix predicate on the "h3_index" field.
func H3IndexHasSuffix(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldHasSuffix(FieldH3Index, v))
}

// H3IndexEqualFold applies the EqualFold predicate on the "h3_index" field.
func H3IndexEqualFold(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEqualFold(FieldH3Index, v))
}

// H3IndexContainsFold applies the ContainsFold predicate on the "h3_index" field.
func H3IndexContainsFold(v string) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldContainsFold(FieldH3Index, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNotIn(FieldUserID, vs...))
}

// ScoreEQ applies the EQ predicate on the "score" field.
func ScoreEQ(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldScore, v))
}

// ScoreNEQ applies the NEQ predicate on the "score" field.
func ScoreNEQ(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNEQ(FieldScore, v))
}

// ScoreIn applies the In predicate on the "score" field.
func ScoreIn(vs ...float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldIn(FieldScore, vs...))
}

// ScoreNotIn applies the NotIn predicate on the "score" field.
func ScoreNotIn(vs ...float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNotIn(FieldScore, vs...))
}

// ScoreGT applies the GT predicate on the "score" field.
func ScoreGT(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGT(FieldScore, v))
}

// ScoreGTE applies the GTE predicate on the "score" field.
func ScoreGTE(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGTE(FieldScore, v))
}

// ScoreLT applies the LT predicate on the "score" field.
func ScoreLT(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLT(FieldScore, v))
}

// ScoreLTE applies the LTE predicate on the "score" field.
func ScoreLTE(v float64) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLTE(FieldScore, v))
}

// LastUpdatedEQ applies the EQ predicate on the "last_updated" field.
func LastUpdatedEQ(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldEQ(FieldLastUpdated, v))
}

// LastUpdatedNEQ applies the NEQ predicate on the "last_updated" field.
func LastUpdatedNEQ(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNEQ(FieldLastUpdated, v))
}

// LastUpdatedIn applies the In predicate on the "last_updated" field.
func LastUpdatedIn(vs ...time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldIn(FieldLastUpdated, vs...))
}

// LastUpdatedNotIn applies the NotIn predicate on the "last_updated" field.
func LastUpdatedNotIn(vs ...time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldNotIn(FieldLastUpdated, vs...))
}

// LastUpdatedGT applies the GT predicate on the "last_updated" field.
func LastUpdatedGT(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGT(FieldLastUpdated, v))
}

// LastUpdatedGTE applies the GTE predicate on the "last_updated" field.
func LastUpdatedGTE(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldGTE(FieldLastUpdated, v))
}

// LastUpdatedLT applies the LT predicate on the "last_updated" field.
func LastUpdatedLT(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLT(FieldLastUpdated, v))
}

// LastUpdatedLTE applies the LTE predicate on the "last_updated" field.
func LastUpdatedLTE(v time.Time) predicate.HexInfluence {
	return predicate.HexInfluence(sql.FieldLTE(FieldLastUpdated, v))
}

// HasHex applies the HasEdge predicate on the "hex" edge.
func HasHex() predicate.HexInfluence {
	return predicate.HexInfluence(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, HexTable, HexColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHexWith applies the HasEdge predicate on the "hex" edge with a given conditions (other predicates).
func HasHexWith(preds ...predicate.Hex) predicate.HexInfluence {
	return predicate.HexInfluence(func(s *sql.Selector) {
		step := newHexStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasUsers applies the HasEdge predicate on the "users" edge.
func HasUsers() predicate.HexInfluence {
	return predicate.HexInfluence(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, UsersTable, UsersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUsersWith applies the HasEdge predicate on the "users" edge with a given conditions (other predicates).
func HasUsersWith(preds ...predicate.User) predicate.HexInfluence {
	return predicate.HexInfluence(func(s *sql.Selector) {
		step := newUsersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HexInfluence) predicate.HexInfluence {
	return predicate.HexInfluence(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HexInfluence) predicate.HexInfluence {
	return predicate.HexInfluence(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HexInfluence) predicate.HexInfluence {
	return predicate.HexInfluence(sql.NotPredicates(p))
}
